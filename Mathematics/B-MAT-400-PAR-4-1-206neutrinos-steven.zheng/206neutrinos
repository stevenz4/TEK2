#!/usr/bin/python3
from math import *
import sys
import time
import linecache

def check_if_number(input):
    try:
        value = int(input)
    except ValueError:
        try:
            value = float(input)
        except ValueError:
            print("Not a number")
            exit(84)
    return value

def error_handler():
    arr = []
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        print("USAGE")
        print("\t./206neutrinos n a h sd\n")
        print("DESCRIPTION")
        print("\tn\tnumber of values\n\ta\t arithmetic mean\n\th\tharmonic mean\n\tsd\t standard deviation")
        exit(0)
    if (len(sys.argv) != 5):
        exit(84)
    for i in range(1, len(sys.argv)):
        arr.append(check_if_number(sys.argv[i]))
    if (arr[0] < 0):
        exit(84)
    return(arr)
    
def number_of_values(arr):
    print("\tNumber of values:\t%d" % arr[0])

def arithmetic_mean(arr, input_user):
    print("\tArithmetic mean:\t%.2f" % arr[1])

def harmonic_mean(arr, input_user):
    print("\tHarmonic mean:\t\t%.2f" % arr[2] + "\n")

def root_mean_square(arr, input_user):
    print("\tRoot mean square:\t%.2f" % arr[4])

def std_dev(arr, input_user):
    print("\tStandard deviation:\t%.2f" % arr[3])

if __name__ == "__main__":
    arr = []
    arr = error_handler()
    arr.append(sqrt(pow(arr[3], 2) + pow(arr[1], 2)))
    while (1):
        print("Enter next value: ", end="")
        input_user = input()
        if (input_user == "END"):
            exit(0)
        input_user = check_if_number(input_user)
        arr[0] = arr[0] + 1
        arr[1] = ((arr[1] * (arr[0] - 1.0)) + float(input_user)) / arr[0]
        arr[2] = arr[0] / ((1 / arr[2] * (arr[0] - 1.0)) + float(1 / input_user))
        arr[4] = sqrt(((pow(arr[4], 2) * (arr[0] - 1.0)) + pow(float(input_user), 2)) / arr[0])
        arr[3] = sqrt(pow(arr[4], 2) - pow(arr[1], 2))
        number_of_values(arr)
        std_dev(arr, input_user)
        arithmetic_mean(arr, input_user)
        root_mean_square(arr, input_user)
        harmonic_mean(arr, input_user)
    exit(0)
